<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd">


    <context:annotation-config />
    <!--自动扫描，将标注spring注解的类自动转化bean-->
    <context:component-scan base-package="com.ocean.basicinfo" />

    <!--配置数据库-->
    <!--<bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value></value>
        </property>
        <property name="url">
            <value>
            </value>

        </property>
        <property name="username">
            <value></value>
        </property>
        <property name="password">
            <value></value>
        </property>
    </bean>-->

    <!--配置sessionfactory-->
  <!--  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="typeAliasesPackage" value="com.bean" />
        &lt;!&ndash;绑定数据源&ndash;&gt;
        <property name="dataSource" ref="dataSource" />
        &lt;!&ndash;自动扫描dao.xml文件&ndash;&gt;
        <property name="mapperLocations" value="classpath:com/mapper/*.xml" />
    </bean>-->

    <!--装配dao接口-->
   <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mapper" /> &lt;!&ndash; DAO接口所在包名，Spring会自动查找其下的类dao.class &ndash;&gt;
    </bean>-->

    <!-- spring扫描service层@Service Controller交给springmvc管理 -->
    <context:component-scan base-package="com.ocean">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />
    </context:component-scan>


    <!-- 数据库连接池 :dataSource-->
    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
          destroy-method="close">
        <!-- 数据库驱动 -->
        <property name="driverClass" value="${jdbc.driver}" />
        <!-- 相应驱动的jdbcUrl -->
        <property name="jdbcUrl" value="${jdbc.url}" />
        <!-- 数据库的用户名 -->
        <property name="username" value="${jdbc.username}" />
        <!-- 数据库的密码 -->
        <property name="password" value="${jdbc.password}" />
        <!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->
        <property name="idleConnectionTestPeriod" value="60" />
        <!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->
        <property name="idleMaxAge" value="30" />
        <!-- 每个分区最大的连接数 -->
        <property name="maxConnectionsPerPartition" value="150" />
        <!-- 每个分区最小的连接数 -->
        <property name="minConnectionsPerPartition" value="5" />
    </bean>


</beans>